{"version":3,"sources":["firebase.js","Page/MainPage/index.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","MainPage","props","useState","viewCount","setViewCount","isLoading","setIsLoading","useEffect","collection","doc","get","then","update","data","console","log","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAiBeA,G,kBAFKC,IAASC,cAVN,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIMC,a,QCgBRC,MA7Bf,SAAkBC,GAChB,MAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAhBAC,qBAAU,WACRlB,EAAGmB,WAAW,aACXC,IAAI,wBACJC,MACAC,MAAK,SAACF,GACLpB,EAAGmB,WAAW,aACXC,IAAI,wBACJG,OAAO,CAAET,UAAWM,EAAII,OAAOV,UAAY,IAC9CC,EAAaK,EAAII,OAAOV,WACxBG,GAAa,MAIjBQ,QAAQC,IAAI,WACX,KAGAV,GACC,gCACE,4BAAIF,EAAY,IAChB,wCCXOa,MAZf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,WCKlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.54c179bf.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCmzodacv8UCD4yX777Lv5-KJUElHjM4HI\",\n  authDomain: \"homepage-46ff2.firebaseapp.com\",\n  projectId: \"homepage-46ff2\",\n  storageBucket: \"homepage-46ff2.appspot.com\",\n  messagingSenderId: \"843711332689\",\n  appId: \"1:843711332689:web:2b2448555723a272711370\",\n  measurementId: \"G-HYWF60S0XK\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nexport default db;\n","import React, { useEffect, useState } from \"react\";\nimport db from \"../../firebase\";\n\nfunction MainPage(props) {\n  const [viewCount, setViewCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    db.collection(\"viewCount\")\n      .doc(\"8HXcyqBdNY7o9ijzOZHq\")\n      .get()\n      .then((doc) => {\n        db.collection(\"viewCount\")\n          .doc(\"8HXcyqBdNY7o9ijzOZHq\")\n          .update({ viewCount: doc.data().viewCount + 1 });\n        setViewCount(doc.data().viewCount);\n        setIsLoading(false);\n        // console.log(typeof doc.data().viewCount);\n      });\n\n    console.log(\"12322\");\n  }, []);\n\n  return (\n    !isLoading && (\n      <div>\n        <p>{viewCount + 1}</p>\n        <p>123</p>\n      </div>\n    )\n  );\n}\n\nexport default MainPage;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport MainPage from \"./Page/MainPage\";\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<MainPage />} />\n\n        {/*<Route exact path=\"/Email\" component={EmailPage} />*/}\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}